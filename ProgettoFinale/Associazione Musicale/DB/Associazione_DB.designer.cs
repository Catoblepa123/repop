#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Associazione_Musicale.DB
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Associazione")]
	public partial class Associazione_DBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definizioni metodo Extensibility
    partial void OnCreated();
    partial void InsertCorso(Corso instance);
    partial void UpdateCorso(Corso instance);
    partial void DeleteCorso(Corso instance);
    partial void InsertInsegnante(Insegnante instance);
    partial void UpdateInsegnante(Insegnante instance);
    partial void DeleteInsegnante(Insegnante instance);
    partial void InsertIscrizioneCorso(IscrizioneCorso instance);
    partial void UpdateIscrizioneCorso(IscrizioneCorso instance);
    partial void DeleteIscrizioneCorso(IscrizioneCorso instance);
    partial void InsertLezione(Lezione instance);
    partial void UpdateLezione(Lezione instance);
    partial void DeleteLezione(Lezione instance);
    partial void InsertPrenotazione(Prenotazione instance);
    partial void UpdatePrenotazione(Prenotazione instance);
    partial void DeletePrenotazione(Prenotazione instance);
    partial void InsertPrenotazioneStrumentazione(PrenotazioneStrumentazione instance);
    partial void UpdatePrenotazioneStrumentazione(PrenotazioneStrumentazione instance);
    partial void DeletePrenotazioneStrumentazione(PrenotazioneStrumentazione instance);
    partial void InsertSala(Sala instance);
    partial void UpdateSala(Sala instance);
    partial void DeleteSala(Sala instance);
    partial void InsertStrumentazione(Strumentazione instance);
    partial void UpdateStrumentazione(Strumentazione instance);
    partial void DeleteStrumentazione(Strumentazione instance);
    partial void InsertPartLezione(PartLezione instance);
    partial void UpdatePartLezione(PartLezione instance);
    partial void DeletePartLezione(PartLezione instance);
    partial void InsertUtente(Utente instance);
    partial void UpdateUtente(Utente instance);
    partial void DeleteUtente(Utente instance);
    #endregion
		
		public Associazione_DBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["AssociazioneConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public Associazione_DBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Associazione_DBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Associazione_DBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Associazione_DBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Corso> Corso
		{
			get
			{
				return this.GetTable<Corso>();
			}
		}
		
		public System.Data.Linq.Table<Insegnante> Insegnante
		{
			get
			{
				return this.GetTable<Insegnante>();
			}
		}
		
		public System.Data.Linq.Table<IscrizioneCorso> IscrizioneCorso
		{
			get
			{
				return this.GetTable<IscrizioneCorso>();
			}
		}
		
		public System.Data.Linq.Table<Lezione> Lezione
		{
			get
			{
				return this.GetTable<Lezione>();
			}
		}
		
		public System.Data.Linq.Table<Prenotazione> Prenotazione
		{
			get
			{
				return this.GetTable<Prenotazione>();
			}
		}
		
		public System.Data.Linq.Table<PrenotazioneStrumentazione> PrenotazioneStrumentazione
		{
			get
			{
				return this.GetTable<PrenotazioneStrumentazione>();
			}
		}
		
		public System.Data.Linq.Table<Sala> Sala
		{
			get
			{
				return this.GetTable<Sala>();
			}
		}
		
		public System.Data.Linq.Table<Strumentazione> Strumentazione
		{
			get
			{
				return this.GetTable<Strumentazione>();
			}
		}
		
		public System.Data.Linq.Table<PartLezione> PartLezione
		{
			get
			{
				return this.GetTable<PartLezione>();
			}
		}
		
		public System.Data.Linq.Table<Utente> Utente
		{
			get
			{
				return this.GetTable<Utente>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Corso")]
	public partial class Corso : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Nome;
		
		private System.DateTime _DataI;
		
		private System.DateTime _DataF;
		
		private string _Descrizione;
		
		private int _NumeroLez;
		
		private int _Insegnante;
		
		private EntitySet<IscrizioneCorso> _IscrizioneCorso;
		
		private EntitySet<Lezione> _Lezione;
		
		private EntitySet<PartLezione> _PartLezione;
		
		private EntityRef<Insegnante> _Insegnante1;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnDataIChanging(System.DateTime value);
    partial void OnDataIChanged();
    partial void OnDataFChanging(System.DateTime value);
    partial void OnDataFChanged();
    partial void OnDescrizioneChanging(string value);
    partial void OnDescrizioneChanged();
    partial void OnNumeroLezChanging(int value);
    partial void OnNumeroLezChanged();
    partial void OnInsegnanteChanging(int value);
    partial void OnInsegnanteChanged();
    #endregion
		
		public Corso()
		{
			this._IscrizioneCorso = new EntitySet<IscrizioneCorso>(new Action<IscrizioneCorso>(this.attach_IscrizioneCorso), new Action<IscrizioneCorso>(this.detach_IscrizioneCorso));
			this._Lezione = new EntitySet<Lezione>(new Action<Lezione>(this.attach_Lezione), new Action<Lezione>(this.detach_Lezione));
			this._PartLezione = new EntitySet<PartLezione>(new Action<PartLezione>(this.attach_PartLezione), new Action<PartLezione>(this.detach_PartLezione));
			this._Insegnante1 = default(EntityRef<Insegnante>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(20)")]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataI", DbType="Date NOT NULL")]
		public System.DateTime DataI
		{
			get
			{
				return this._DataI;
			}
			set
			{
				if ((this._DataI != value))
				{
					this.OnDataIChanging(value);
					this.SendPropertyChanging();
					this._DataI = value;
					this.SendPropertyChanged("DataI");
					this.OnDataIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataF", DbType="Date NOT NULL")]
		public System.DateTime DataF
		{
			get
			{
				return this._DataF;
			}
			set
			{
				if ((this._DataF != value))
				{
					this.OnDataFChanging(value);
					this.SendPropertyChanging();
					this._DataF = value;
					this.SendPropertyChanged("DataF");
					this.OnDataFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrizione", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Descrizione
		{
			get
			{
				return this._Descrizione;
			}
			set
			{
				if ((this._Descrizione != value))
				{
					this.OnDescrizioneChanging(value);
					this.SendPropertyChanging();
					this._Descrizione = value;
					this.SendPropertyChanged("Descrizione");
					this.OnDescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroLez", DbType="Int NOT NULL")]
		public int NumeroLez
		{
			get
			{
				return this._NumeroLez;
			}
			set
			{
				if ((this._NumeroLez != value))
				{
					this.OnNumeroLezChanging(value);
					this.SendPropertyChanging();
					this._NumeroLez = value;
					this.SendPropertyChanged("NumeroLez");
					this.OnNumeroLezChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Insegnante", DbType="Int NOT NULL")]
		public int Insegnante
		{
			get
			{
				return this._Insegnante;
			}
			set
			{
				if ((this._Insegnante != value))
				{
					if (this._Insegnante1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInsegnanteChanging(value);
					this.SendPropertyChanging();
					this._Insegnante = value;
					this.SendPropertyChanged("Insegnante");
					this.OnInsegnanteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Corso_IscrizioneCorso", Storage="_IscrizioneCorso", ThisKey="ID", OtherKey="ID_Corso")]
		public EntitySet<IscrizioneCorso> IscrizioneCorso
		{
			get
			{
				return this._IscrizioneCorso;
			}
			set
			{
				this._IscrizioneCorso.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Corso_Lezione", Storage="_Lezione", ThisKey="ID", OtherKey="Corso")]
		public EntitySet<Lezione> Lezione
		{
			get
			{
				return this._Lezione;
			}
			set
			{
				this._Lezione.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Corso_PartLezione", Storage="_PartLezione", ThisKey="ID", OtherKey="ID_Corso")]
		public EntitySet<PartLezione> PartLezione
		{
			get
			{
				return this._PartLezione;
			}
			set
			{
				this._PartLezione.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insegnante_Corso", Storage="_Insegnante1", ThisKey="Insegnante", OtherKey="ID", IsForeignKey=true)]
		public Insegnante Insegnante1
		{
			get
			{
				return this._Insegnante1.Entity;
			}
			set
			{
				Insegnante previousValue = this._Insegnante1.Entity;
				if (((previousValue != value) 
							|| (this._Insegnante1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Insegnante1.Entity = null;
						previousValue.Corso.Remove(this);
					}
					this._Insegnante1.Entity = value;
					if ((value != null))
					{
						value.Corso.Add(this);
						this._Insegnante = value.ID;
					}
					else
					{
						this._Insegnante = default(int);
					}
					this.SendPropertyChanged("Insegnante1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_IscrizioneCorso(IscrizioneCorso entity)
		{
			this.SendPropertyChanging();
			entity.Corso = this;
		}
		
		private void detach_IscrizioneCorso(IscrizioneCorso entity)
		{
			this.SendPropertyChanging();
			entity.Corso = null;
		}
		
		private void attach_Lezione(Lezione entity)
		{
			this.SendPropertyChanging();
			entity.Corso1 = this;
		}
		
		private void detach_Lezione(Lezione entity)
		{
			this.SendPropertyChanging();
			entity.Corso1 = null;
		}
		
		private void attach_PartLezione(PartLezione entity)
		{
			this.SendPropertyChanging();
			entity.Corso = this;
		}
		
		private void detach_PartLezione(PartLezione entity)
		{
			this.SendPropertyChanging();
			entity.Corso = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Insegnante")]
	public partial class Insegnante : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Nome;
		
		private string _Cognome;
		
		private string _Pass;
		
		private EntitySet<Corso> _Corso;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnCognomeChanging(string value);
    partial void OnCognomeChanged();
    partial void OnPassChanging(string value);
    partial void OnPassChanged();
    #endregion
		
		public Insegnante()
		{
			this._Corso = new EntitySet<Corso>(new Action<Corso>(this.attach_Corso), new Action<Corso>(this.detach_Corso));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cognome", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Cognome
		{
			get
			{
				return this._Cognome;
			}
			set
			{
				if ((this._Cognome != value))
				{
					this.OnCognomeChanging(value);
					this.SendPropertyChanging();
					this._Cognome = value;
					this.SendPropertyChanged("Cognome");
					this.OnCognomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pass", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Pass
		{
			get
			{
				return this._Pass;
			}
			set
			{
				if ((this._Pass != value))
				{
					this.OnPassChanging(value);
					this.SendPropertyChanging();
					this._Pass = value;
					this.SendPropertyChanged("Pass");
					this.OnPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insegnante_Corso", Storage="_Corso", ThisKey="ID", OtherKey="Insegnante")]
		public EntitySet<Corso> Corso
		{
			get
			{
				return this._Corso;
			}
			set
			{
				this._Corso.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Corso(Corso entity)
		{
			this.SendPropertyChanging();
			entity.Insegnante1 = this;
		}
		
		private void detach_Corso(Corso entity)
		{
			this.SendPropertyChanging();
			entity.Insegnante1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IscrizioneCorso")]
	public partial class IscrizioneCorso : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ID_Utente;
		
		private System.Nullable<int> _ID_Corso;
		
		private EntityRef<Corso> _Corso;
		
		private EntityRef<Utente> _Utente;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_UtenteChanging(System.Nullable<int> value);
    partial void OnID_UtenteChanged();
    partial void OnID_CorsoChanging(System.Nullable<int> value);
    partial void OnID_CorsoChanged();
    #endregion
		
		public IscrizioneCorso()
		{
			this._Corso = default(EntityRef<Corso>);
			this._Utente = default(EntityRef<Utente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Utente", DbType="Int")]
		public System.Nullable<int> ID_Utente
		{
			get
			{
				return this._ID_Utente;
			}
			set
			{
				if ((this._ID_Utente != value))
				{
					if (this._Utente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_UtenteChanging(value);
					this.SendPropertyChanging();
					this._ID_Utente = value;
					this.SendPropertyChanged("ID_Utente");
					this.OnID_UtenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Corso", DbType="Int")]
		public System.Nullable<int> ID_Corso
		{
			get
			{
				return this._ID_Corso;
			}
			set
			{
				if ((this._ID_Corso != value))
				{
					if (this._Corso.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_CorsoChanging(value);
					this.SendPropertyChanging();
					this._ID_Corso = value;
					this.SendPropertyChanged("ID_Corso");
					this.OnID_CorsoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Corso_IscrizioneCorso", Storage="_Corso", ThisKey="ID_Corso", OtherKey="ID", IsForeignKey=true)]
		public Corso Corso
		{
			get
			{
				return this._Corso.Entity;
			}
			set
			{
				Corso previousValue = this._Corso.Entity;
				if (((previousValue != value) 
							|| (this._Corso.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Corso.Entity = null;
						previousValue.IscrizioneCorso.Remove(this);
					}
					this._Corso.Entity = value;
					if ((value != null))
					{
						value.IscrizioneCorso.Add(this);
						this._ID_Corso = value.ID;
					}
					else
					{
						this._ID_Corso = default(Nullable<int>);
					}
					this.SendPropertyChanged("Corso");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utente_IscrizioneCorso", Storage="_Utente", ThisKey="ID_Utente", OtherKey="ID", IsForeignKey=true)]
		public Utente Utente
		{
			get
			{
				return this._Utente.Entity;
			}
			set
			{
				Utente previousValue = this._Utente.Entity;
				if (((previousValue != value) 
							|| (this._Utente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utente.Entity = null;
						previousValue.IscrizioneCorso.Remove(this);
					}
					this._Utente.Entity = value;
					if ((value != null))
					{
						value.IscrizioneCorso.Add(this);
						this._ID_Utente = value.ID;
					}
					else
					{
						this._ID_Utente = default(Nullable<int>);
					}
					this.SendPropertyChanged("Utente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lezione")]
	public partial class Lezione : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Numero;
		
		private System.DateTime _Giorno;
		
		private int _Corso;
		
		private System.TimeSpan _OraI;
		
		private System.TimeSpan _OraF;
		
		private string _Descrizione;
		
		private EntityRef<Corso> _Corso1;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNumeroChanging(int value);
    partial void OnNumeroChanged();
    partial void OnGiornoChanging(System.DateTime value);
    partial void OnGiornoChanged();
    partial void OnCorsoChanging(int value);
    partial void OnCorsoChanged();
    partial void OnOraIChanging(System.TimeSpan value);
    partial void OnOraIChanged();
    partial void OnOraFChanging(System.TimeSpan value);
    partial void OnOraFChanged();
    partial void OnDescrizioneChanging(string value);
    partial void OnDescrizioneChanged();
    #endregion
		
		public Lezione()
		{
			this._Corso1 = default(EntityRef<Corso>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero", DbType="Int NOT NULL")]
		public int Numero
		{
			get
			{
				return this._Numero;
			}
			set
			{
				if ((this._Numero != value))
				{
					this.OnNumeroChanging(value);
					this.SendPropertyChanging();
					this._Numero = value;
					this.SendPropertyChanged("Numero");
					this.OnNumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Giorno", DbType="Date NOT NULL")]
		public System.DateTime Giorno
		{
			get
			{
				return this._Giorno;
			}
			set
			{
				if ((this._Giorno != value))
				{
					this.OnGiornoChanging(value);
					this.SendPropertyChanging();
					this._Giorno = value;
					this.SendPropertyChanged("Giorno");
					this.OnGiornoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Corso", DbType="Int NOT NULL")]
		public int Corso
		{
			get
			{
				return this._Corso;
			}
			set
			{
				if ((this._Corso != value))
				{
					if (this._Corso1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCorsoChanging(value);
					this.SendPropertyChanging();
					this._Corso = value;
					this.SendPropertyChanged("Corso");
					this.OnCorsoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OraI", DbType="Time NOT NULL")]
		public System.TimeSpan OraI
		{
			get
			{
				return this._OraI;
			}
			set
			{
				if ((this._OraI != value))
				{
					this.OnOraIChanging(value);
					this.SendPropertyChanging();
					this._OraI = value;
					this.SendPropertyChanged("OraI");
					this.OnOraIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OraF", DbType="Time NOT NULL")]
		public System.TimeSpan OraF
		{
			get
			{
				return this._OraF;
			}
			set
			{
				if ((this._OraF != value))
				{
					this.OnOraFChanging(value);
					this.SendPropertyChanging();
					this._OraF = value;
					this.SendPropertyChanged("OraF");
					this.OnOraFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrizione", DbType="VarChar(50)")]
		public string Descrizione
		{
			get
			{
				return this._Descrizione;
			}
			set
			{
				if ((this._Descrizione != value))
				{
					this.OnDescrizioneChanging(value);
					this.SendPropertyChanging();
					this._Descrizione = value;
					this.SendPropertyChanged("Descrizione");
					this.OnDescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Corso_Lezione", Storage="_Corso1", ThisKey="Corso", OtherKey="ID", IsForeignKey=true)]
		public Corso Corso1
		{
			get
			{
				return this._Corso1.Entity;
			}
			set
			{
				Corso previousValue = this._Corso1.Entity;
				if (((previousValue != value) 
							|| (this._Corso1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Corso1.Entity = null;
						previousValue.Lezione.Remove(this);
					}
					this._Corso1.Entity = value;
					if ((value != null))
					{
						value.Lezione.Add(this);
						this._Corso = value.ID;
					}
					else
					{
						this._Corso = default(int);
					}
					this.SendPropertyChanged("Corso1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Prenotazione")]
	public partial class Prenotazione : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _Giorno;
		
		private System.TimeSpan _OraI;
		
		private System.TimeSpan _OraF;
		
		private int _Utente;
		
		private int _Sala;
		
		private EntitySet<PrenotazioneStrumentazione> _PrenotazioneStrumentazione;
		
		private EntityRef<Sala> _Sala1;
		
		private EntityRef<Utente> _Utente1;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGiornoChanging(System.DateTime value);
    partial void OnGiornoChanged();
    partial void OnOraIChanging(System.TimeSpan value);
    partial void OnOraIChanged();
    partial void OnOraFChanging(System.TimeSpan value);
    partial void OnOraFChanged();
    partial void OnUtenteChanging(int value);
    partial void OnUtenteChanged();
    partial void OnSalaChanging(int value);
    partial void OnSalaChanged();
    #endregion
		
		public Prenotazione()
		{
			this._PrenotazioneStrumentazione = new EntitySet<PrenotazioneStrumentazione>(new Action<PrenotazioneStrumentazione>(this.attach_PrenotazioneStrumentazione), new Action<PrenotazioneStrumentazione>(this.detach_PrenotazioneStrumentazione));
			this._Sala1 = default(EntityRef<Sala>);
			this._Utente1 = default(EntityRef<Utente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Giorno", DbType="Date NOT NULL")]
		public System.DateTime Giorno
		{
			get
			{
				return this._Giorno;
			}
			set
			{
				if ((this._Giorno != value))
				{
					this.OnGiornoChanging(value);
					this.SendPropertyChanging();
					this._Giorno = value;
					this.SendPropertyChanged("Giorno");
					this.OnGiornoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OraI", DbType="Time NOT NULL")]
		public System.TimeSpan OraI
		{
			get
			{
				return this._OraI;
			}
			set
			{
				if ((this._OraI != value))
				{
					this.OnOraIChanging(value);
					this.SendPropertyChanging();
					this._OraI = value;
					this.SendPropertyChanged("OraI");
					this.OnOraIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OraF", DbType="Time NOT NULL")]
		public System.TimeSpan OraF
		{
			get
			{
				return this._OraF;
			}
			set
			{
				if ((this._OraF != value))
				{
					this.OnOraFChanging(value);
					this.SendPropertyChanging();
					this._OraF = value;
					this.SendPropertyChanged("OraF");
					this.OnOraFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Utente", DbType="Int NOT NULL")]
		public int Utente
		{
			get
			{
				return this._Utente;
			}
			set
			{
				if ((this._Utente != value))
				{
					if (this._Utente1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUtenteChanging(value);
					this.SendPropertyChanging();
					this._Utente = value;
					this.SendPropertyChanged("Utente");
					this.OnUtenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sala", DbType="Int NOT NULL")]
		public int Sala
		{
			get
			{
				return this._Sala;
			}
			set
			{
				if ((this._Sala != value))
				{
					if (this._Sala1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalaChanging(value);
					this.SendPropertyChanging();
					this._Sala = value;
					this.SendPropertyChanged("Sala");
					this.OnSalaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prenotazione_PrenotazioneStrumentazione", Storage="_PrenotazioneStrumentazione", ThisKey="ID", OtherKey="ID_Prenotazione")]
		public EntitySet<PrenotazioneStrumentazione> PrenotazioneStrumentazione
		{
			get
			{
				return this._PrenotazioneStrumentazione;
			}
			set
			{
				this._PrenotazioneStrumentazione.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sala_Prenotazione", Storage="_Sala1", ThisKey="Sala", OtherKey="ID", IsForeignKey=true)]
		public Sala Sala1
		{
			get
			{
				return this._Sala1.Entity;
			}
			set
			{
				Sala previousValue = this._Sala1.Entity;
				if (((previousValue != value) 
							|| (this._Sala1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sala1.Entity = null;
						previousValue.Prenotazione.Remove(this);
					}
					this._Sala1.Entity = value;
					if ((value != null))
					{
						value.Prenotazione.Add(this);
						this._Sala = value.ID;
					}
					else
					{
						this._Sala = default(int);
					}
					this.SendPropertyChanged("Sala1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utente_Prenotazione", Storage="_Utente1", ThisKey="Utente", OtherKey="ID", IsForeignKey=true)]
		public Utente Utente1
		{
			get
			{
				return this._Utente1.Entity;
			}
			set
			{
				Utente previousValue = this._Utente1.Entity;
				if (((previousValue != value) 
							|| (this._Utente1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utente1.Entity = null;
						previousValue.Prenotazione.Remove(this);
					}
					this._Utente1.Entity = value;
					if ((value != null))
					{
						value.Prenotazione.Add(this);
						this._Utente = value.ID;
					}
					else
					{
						this._Utente = default(int);
					}
					this.SendPropertyChanged("Utente1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PrenotazioneStrumentazione(PrenotazioneStrumentazione entity)
		{
			this.SendPropertyChanging();
			entity.Prenotazione = this;
		}
		
		private void detach_PrenotazioneStrumentazione(PrenotazioneStrumentazione entity)
		{
			this.SendPropertyChanging();
			entity.Prenotazione = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PrenotazioneStrumentazione")]
	public partial class PrenotazioneStrumentazione : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ID_Prenotazione;
		
		private int _ID_Strumentazione;
		
		private EntityRef<Prenotazione> _Prenotazione;
		
		private EntityRef<Strumentazione> _Strumentazione;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_PrenotazioneChanging(int value);
    partial void OnID_PrenotazioneChanged();
    partial void OnID_StrumentazioneChanging(int value);
    partial void OnID_StrumentazioneChanged();
    #endregion
		
		public PrenotazioneStrumentazione()
		{
			this._Prenotazione = default(EntityRef<Prenotazione>);
			this._Strumentazione = default(EntityRef<Strumentazione>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Prenotazione", DbType="Int NOT NULL")]
		public int ID_Prenotazione
		{
			get
			{
				return this._ID_Prenotazione;
			}
			set
			{
				if ((this._ID_Prenotazione != value))
				{
					if (this._Prenotazione.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PrenotazioneChanging(value);
					this.SendPropertyChanging();
					this._ID_Prenotazione = value;
					this.SendPropertyChanged("ID_Prenotazione");
					this.OnID_PrenotazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Strumentazione", DbType="Int NOT NULL")]
		public int ID_Strumentazione
		{
			get
			{
				return this._ID_Strumentazione;
			}
			set
			{
				if ((this._ID_Strumentazione != value))
				{
					if (this._Strumentazione.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_StrumentazioneChanging(value);
					this.SendPropertyChanging();
					this._ID_Strumentazione = value;
					this.SendPropertyChanged("ID_Strumentazione");
					this.OnID_StrumentazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prenotazione_PrenotazioneStrumentazione", Storage="_Prenotazione", ThisKey="ID_Prenotazione", OtherKey="ID", IsForeignKey=true)]
		public Prenotazione Prenotazione
		{
			get
			{
				return this._Prenotazione.Entity;
			}
			set
			{
				Prenotazione previousValue = this._Prenotazione.Entity;
				if (((previousValue != value) 
							|| (this._Prenotazione.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prenotazione.Entity = null;
						previousValue.PrenotazioneStrumentazione.Remove(this);
					}
					this._Prenotazione.Entity = value;
					if ((value != null))
					{
						value.PrenotazioneStrumentazione.Add(this);
						this._ID_Prenotazione = value.ID;
					}
					else
					{
						this._ID_Prenotazione = default(int);
					}
					this.SendPropertyChanged("Prenotazione");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Strumentazione_PrenotazioneStrumentazione", Storage="_Strumentazione", ThisKey="ID_Strumentazione", OtherKey="ID", IsForeignKey=true)]
		public Strumentazione Strumentazione
		{
			get
			{
				return this._Strumentazione.Entity;
			}
			set
			{
				Strumentazione previousValue = this._Strumentazione.Entity;
				if (((previousValue != value) 
							|| (this._Strumentazione.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Strumentazione.Entity = null;
						previousValue.PrenotazioneStrumentazione.Remove(this);
					}
					this._Strumentazione.Entity = value;
					if ((value != null))
					{
						value.PrenotazioneStrumentazione.Add(this);
						this._ID_Strumentazione = value.ID;
					}
					else
					{
						this._ID_Strumentazione = default(int);
					}
					this.SendPropertyChanged("Strumentazione");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sala")]
	public partial class Sala : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Nome;
		
		private string _Descrizione;
		
		private EntitySet<Prenotazione> _Prenotazione;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnDescrizioneChanging(string value);
    partial void OnDescrizioneChanged();
    #endregion
		
		public Sala()
		{
			this._Prenotazione = new EntitySet<Prenotazione>(new Action<Prenotazione>(this.attach_Prenotazione), new Action<Prenotazione>(this.detach_Prenotazione));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrizione", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Descrizione
		{
			get
			{
				return this._Descrizione;
			}
			set
			{
				if ((this._Descrizione != value))
				{
					this.OnDescrizioneChanging(value);
					this.SendPropertyChanging();
					this._Descrizione = value;
					this.SendPropertyChanged("Descrizione");
					this.OnDescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sala_Prenotazione", Storage="_Prenotazione", ThisKey="ID", OtherKey="Sala")]
		public EntitySet<Prenotazione> Prenotazione
		{
			get
			{
				return this._Prenotazione;
			}
			set
			{
				this._Prenotazione.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Prenotazione(Prenotazione entity)
		{
			this.SendPropertyChanging();
			entity.Sala1 = this;
		}
		
		private void detach_Prenotazione(Prenotazione entity)
		{
			this.SendPropertyChanging();
			entity.Sala1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Strumentazione")]
	public partial class Strumentazione : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NomeGenerico;
		
		private string _NomeModello;
		
		private string _Descrizione;
		
		private EntitySet<PrenotazioneStrumentazione> _PrenotazioneStrumentazione;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNomeGenericoChanging(string value);
    partial void OnNomeGenericoChanged();
    partial void OnNomeModelloChanging(string value);
    partial void OnNomeModelloChanged();
    partial void OnDescrizioneChanging(string value);
    partial void OnDescrizioneChanged();
    #endregion
		
		public Strumentazione()
		{
			this._PrenotazioneStrumentazione = new EntitySet<PrenotazioneStrumentazione>(new Action<PrenotazioneStrumentazione>(this.attach_PrenotazioneStrumentazione), new Action<PrenotazioneStrumentazione>(this.detach_PrenotazioneStrumentazione));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomeGenerico", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string NomeGenerico
		{
			get
			{
				return this._NomeGenerico;
			}
			set
			{
				if ((this._NomeGenerico != value))
				{
					this.OnNomeGenericoChanging(value);
					this.SendPropertyChanging();
					this._NomeGenerico = value;
					this.SendPropertyChanged("NomeGenerico");
					this.OnNomeGenericoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomeModello", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string NomeModello
		{
			get
			{
				return this._NomeModello;
			}
			set
			{
				if ((this._NomeModello != value))
				{
					this.OnNomeModelloChanging(value);
					this.SendPropertyChanging();
					this._NomeModello = value;
					this.SendPropertyChanged("NomeModello");
					this.OnNomeModelloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrizione", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Descrizione
		{
			get
			{
				return this._Descrizione;
			}
			set
			{
				if ((this._Descrizione != value))
				{
					this.OnDescrizioneChanging(value);
					this.SendPropertyChanging();
					this._Descrizione = value;
					this.SendPropertyChanged("Descrizione");
					this.OnDescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Strumentazione_PrenotazioneStrumentazione", Storage="_PrenotazioneStrumentazione", ThisKey="ID", OtherKey="ID_Strumentazione")]
		public EntitySet<PrenotazioneStrumentazione> PrenotazioneStrumentazione
		{
			get
			{
				return this._PrenotazioneStrumentazione;
			}
			set
			{
				this._PrenotazioneStrumentazione.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PrenotazioneStrumentazione(PrenotazioneStrumentazione entity)
		{
			this.SendPropertyChanging();
			entity.Strumentazione = this;
		}
		
		private void detach_PrenotazioneStrumentazione(PrenotazioneStrumentazione entity)
		{
			this.SendPropertyChanging();
			entity.Strumentazione = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PartLezione")]
	public partial class PartLezione : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ID_Utente;
		
		private System.Nullable<int> _ID_Corso;
		
		private EntityRef<Corso> _Corso;
		
		private EntityRef<Utente> _Utente;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_UtenteChanging(int value);
    partial void OnID_UtenteChanged();
    partial void OnID_CorsoChanging(System.Nullable<int> value);
    partial void OnID_CorsoChanged();
    #endregion
		
		public PartLezione()
		{
			this._Corso = default(EntityRef<Corso>);
			this._Utente = default(EntityRef<Utente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Utente", DbType="Int NOT NULL")]
		public int ID_Utente
		{
			get
			{
				return this._ID_Utente;
			}
			set
			{
				if ((this._ID_Utente != value))
				{
					if (this._Utente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_UtenteChanging(value);
					this.SendPropertyChanging();
					this._ID_Utente = value;
					this.SendPropertyChanged("ID_Utente");
					this.OnID_UtenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Corso", DbType="Int")]
		public System.Nullable<int> ID_Corso
		{
			get
			{
				return this._ID_Corso;
			}
			set
			{
				if ((this._ID_Corso != value))
				{
					if (this._Corso.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_CorsoChanging(value);
					this.SendPropertyChanging();
					this._ID_Corso = value;
					this.SendPropertyChanged("ID_Corso");
					this.OnID_CorsoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Corso_PartLezione", Storage="_Corso", ThisKey="ID_Corso", OtherKey="ID", IsForeignKey=true)]
		public Corso Corso
		{
			get
			{
				return this._Corso.Entity;
			}
			set
			{
				Corso previousValue = this._Corso.Entity;
				if (((previousValue != value) 
							|| (this._Corso.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Corso.Entity = null;
						previousValue.PartLezione.Remove(this);
					}
					this._Corso.Entity = value;
					if ((value != null))
					{
						value.PartLezione.Add(this);
						this._ID_Corso = value.ID;
					}
					else
					{
						this._ID_Corso = default(Nullable<int>);
					}
					this.SendPropertyChanged("Corso");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utente_PartLezione", Storage="_Utente", ThisKey="ID_Utente", OtherKey="ID", IsForeignKey=true)]
		public Utente Utente
		{
			get
			{
				return this._Utente.Entity;
			}
			set
			{
				Utente previousValue = this._Utente.Entity;
				if (((previousValue != value) 
							|| (this._Utente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utente.Entity = null;
						previousValue.PartLezione.Remove(this);
					}
					this._Utente.Entity = value;
					if ((value != null))
					{
						value.PartLezione.Add(this);
						this._ID_Utente = value.ID;
					}
					else
					{
						this._ID_Utente = default(int);
					}
					this.SendPropertyChanged("Utente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Utente")]
	public partial class Utente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Nome;
		
		private string _Cognome;
		
		private string _Pass;
		
		private string _Email;
		
		private EntitySet<IscrizioneCorso> _IscrizioneCorso;
		
		private EntitySet<Prenotazione> _Prenotazione;
		
		private EntitySet<PartLezione> _PartLezione;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnCognomeChanging(string value);
    partial void OnCognomeChanged();
    partial void OnPassChanging(string value);
    partial void OnPassChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Utente()
		{
			this._IscrizioneCorso = new EntitySet<IscrizioneCorso>(new Action<IscrizioneCorso>(this.attach_IscrizioneCorso), new Action<IscrizioneCorso>(this.detach_IscrizioneCorso));
			this._Prenotazione = new EntitySet<Prenotazione>(new Action<Prenotazione>(this.attach_Prenotazione), new Action<Prenotazione>(this.detach_Prenotazione));
			this._PartLezione = new EntitySet<PartLezione>(new Action<PartLezione>(this.attach_PartLezione), new Action<PartLezione>(this.detach_PartLezione));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cognome", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Cognome
		{
			get
			{
				return this._Cognome;
			}
			set
			{
				if ((this._Cognome != value))
				{
					this.OnCognomeChanging(value);
					this.SendPropertyChanging();
					this._Cognome = value;
					this.SendPropertyChanged("Cognome");
					this.OnCognomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pass", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Pass
		{
			get
			{
				return this._Pass;
			}
			set
			{
				if ((this._Pass != value))
				{
					this.OnPassChanging(value);
					this.SendPropertyChanging();
					this._Pass = value;
					this.SendPropertyChanged("Pass");
					this.OnPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utente_IscrizioneCorso", Storage="_IscrizioneCorso", ThisKey="ID", OtherKey="ID_Utente")]
		public EntitySet<IscrizioneCorso> IscrizioneCorso
		{
			get
			{
				return this._IscrizioneCorso;
			}
			set
			{
				this._IscrizioneCorso.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utente_Prenotazione", Storage="_Prenotazione", ThisKey="ID", OtherKey="Utente")]
		public EntitySet<Prenotazione> Prenotazione
		{
			get
			{
				return this._Prenotazione;
			}
			set
			{
				this._Prenotazione.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utente_PartLezione", Storage="_PartLezione", ThisKey="ID", OtherKey="ID_Utente")]
		public EntitySet<PartLezione> PartLezione
		{
			get
			{
				return this._PartLezione;
			}
			set
			{
				this._PartLezione.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_IscrizioneCorso(IscrizioneCorso entity)
		{
			this.SendPropertyChanging();
			entity.Utente = this;
		}
		
		private void detach_IscrizioneCorso(IscrizioneCorso entity)
		{
			this.SendPropertyChanging();
			entity.Utente = null;
		}
		
		private void attach_Prenotazione(Prenotazione entity)
		{
			this.SendPropertyChanging();
			entity.Utente1 = this;
		}
		
		private void detach_Prenotazione(Prenotazione entity)
		{
			this.SendPropertyChanging();
			entity.Utente1 = null;
		}
		
		private void attach_PartLezione(PartLezione entity)
		{
			this.SendPropertyChanging();
			entity.Utente = this;
		}
		
		private void detach_PartLezione(PartLezione entity)
		{
			this.SendPropertyChanging();
			entity.Utente = null;
		}
	}
}
#pragma warning restore 1591
